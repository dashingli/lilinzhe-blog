import{_ as i,X as a,Y as e,Z as n}from"./framework-b3714b73.js";const t={},d=n('<h1 id="js-对象" tabindex="-1"><a class="header-anchor" href="#js-对象" aria-hidden="true">#</a> JS 对象</h1><h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><ul><li><strong>无序</strong>的数据集合</li><li>键值对的集合</li></ul><hr><h2 id="两种写法" tabindex="-1"><a class="header-anchor" href="#两种写法" aria-hidden="true">#</a> 两种写法</h2><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081019080.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><aside> 💡 键名是字符串 </aside><hr><h2 id="删除属性" tabindex="-1"><a class="header-anchor" href="#删除属性" aria-hidden="true">#</a> 删除属性</h2><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081019669.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><aside> 💡 区分属性值为undefined 和 不含属性名 </aside><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081019637.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081020202.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><hr><h2 id="查看所有属性-读属性" tabindex="-1"><a class="header-anchor" href="#查看所有属性-读属性" aria-hidden="true">#</a> 查看所有属性(<strong>读</strong>属性)</h2><ul><li>查看自身属性</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081020001.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><ul><li>查看自身属性 + 共有属性</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081020428.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><ul><li>判断一个属性是自身的还是共有的</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081020830.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><hr><h2 id="查看某个属性" tabindex="-1"><a class="header-anchor" href="#查看某个属性" aria-hidden="true">#</a> 查看某个属性</h2><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081020277.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><hr><h2 id="修改或增加属性-写属性" tabindex="-1"><a class="header-anchor" href="#修改或增加属性-写属性" aria-hidden="true">#</a> 修改或增加属性(写属性)</h2><ul><li>直接赋值</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081020884.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><ul><li>批量赋值</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081020980.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="name-in-obj-和-obj-hasownproperty-name-区别" tabindex="-1"><a class="header-anchor" href="#name-in-obj-和-obj-hasownproperty-name-区别" aria-hidden="true">#</a> ‘name’ in obj 和 obj.hasOwnProperty(’name’)区别</h2><p>‘name’ in obj 判断 name 是不是 obj 的属性(包括共有属性)’</p><p>obj.hasOwnProperty(’name’)判断是不是 obj 自身属性</p>',33),g=[d];function l(r,h){return a(),e("div",null,g)}const o=i(t,[["render",l],["__file","JS对象.html.vue"]]);export{o as default};
