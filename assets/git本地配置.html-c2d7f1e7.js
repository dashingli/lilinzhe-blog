import{_ as s,X as t,Y as l,$ as e,a0 as a,a1 as c,Z as n,E as o}from"./framework-b3714b73.js";const d={},r=n(`<h1 id="git-本地配置" tabindex="-1"><a class="header-anchor" href="#git-本地配置" aria-hidden="true">#</a> git 本地配置</h1><h2 id="_6-行配置" tabindex="-1"><a class="header-anchor" href="#_6-行配置" aria-hidden="true">#</a> 6 行配置</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name 你的名字
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email 你的邮箱
<span class="token function">git</span> config <span class="token parameter variable">--global</span> push.default simple
<span class="token function">git</span> config <span class="token parameter variable">--global</span> core.quotepath <span class="token boolean">false</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> core.editor <span class="token string">&quot;code --wait&quot;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf input
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>git init</code>会创建.git 目录</p><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><p>提交到暂存区 : <code>git add 选择要提交的内容</code></p><p>提交到本地库 : <code>git commit -m &quot;xxx&quot;</code> / 用 vscode 提交到本地库 : <code>git commit -v</code></p><p>文件里面添加不提交的文件 : <code>.gitignore</code></p><p>查看历史 : <code>git log</code></p><p>查看所有历史 : <code>git reflog</code></p><p>御剑飞行(版本切换/回滚) : <code>git reset --hard 版本号</code></p><p>创造平行时间线(创建分支) : <code>git branch 分支名</code></p><p>切换平行时间线(切换分支) : <code>git checkout 分支名</code></p><p>合并平行时间线(分支合并) :</p><ul><li>切换到要保留的分支 : <code>git checkout 保留分支名</code></li><li>运行<code>git merge 合并分支名</code></li><li>如果有冲突 (conflict) 解决冲突,然后<code>git commit</code></li><li>合并完删除无用分支<code>git branch -d 分支名</code></li></ul><h1 id="git-→-github-配置" tabindex="-1"><a class="header-anchor" href="#git-→-github-配置" aria-hidden="true">#</a> <em>git → github 配置</em></h1><ul><li>使用<code>SSH key</code>去验证身份</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081057907.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><ul><li>生成<code>SSH key</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-C</span> <span class="token string">&quot;your_email@example.com&quot;</span>
然后得到公钥和私钥,私钥自己保存,公钥配置到github上面即可
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,22),g={href:"https://docs.github.com/cn/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent?platform=mac",target:"_blank",rel:"noopener noreferrer"},p=n(`<h1 id="git-上传代码到-github" tabindex="-1"><a class="header-anchor" href="#git-上传代码到-github" aria-hidden="true">#</a> <em>git 上传代码到 github</em></h1><ul><li>原理示意图</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081057528.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><ul><li>本地添加远程仓库地址</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:xxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>推送本地 master 分支到远程仓库的 master 分支</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7);function u(h,m){const i=o("ExternalLinkIcon");return t(),l("div",null,[r,e("p",null,[a("❤ 如果配置失败请查看"),e("a",g,[a("github 文档"),c(i)])]),p])}const v=s(d,[["render",u],["__file","git本地配置.html.vue"]]);export{v as default};
