import{_ as a,X as n,Y as i,Z as e}from"./framework-b3714b73.js";const s={},l=e(`<h1 id="js-数组" tabindex="-1"><a class="header-anchor" href="#js-数组" aria-hidden="true">#</a> JS 数组</h1><h2 id="js-其实没有真正的数组-只是用对象模拟数组" tabindex="-1"><a class="header-anchor" href="#js-其实没有真正的数组-只是用对象模拟数组" aria-hidden="true">#</a> JS 其实没有真正的数组(只是用对象模拟数组)</h2><p>以下代码证明</p><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081022223.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081022034.png" alt="使用Object.keys(arry)将数组的keys打印出来,发现是字符串" tabindex="0" loading="lazy"><figcaption>使用Object.keys(arry)将数组的keys打印出来,发现是字符串</figcaption></figure><p>使用 Object.keys(arry)将数组的 keys 打印出来,发现是字符串</p><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081022073.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081022859.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="js-数组-1" tabindex="-1"><a class="header-anchor" href="#js-数组-1" aria-hidden="true">#</a> JS 数组</h2><ul><li>元素的数据类型可以不同</li><li>内存不一定是连续的(对象随机存储)</li><li>不能通过数字下标,而是通过字符串下标</li></ul><h2 id="创建一个数组" tabindex="-1"><a class="header-anchor" href="#创建一个数组" aria-hidden="true">#</a> 创建一个数组</h2><ul><li><p>新建</p><ul><li>let arr = [1,2,3]</li><li>let arr = new Array(1,2,3) ⇒ 内容为[1,2,3]</li><li>let arr = new Array(3) ⇒ 长度为 3</li></ul></li><li><p>转化</p><ul><li>let arr = ‘1,2,3’.split(’,’)</li><li>let arr = ‘123’.split(’’)</li><li>Array.from(’123’)</li></ul></li><li><p>伪数组</p><ul><li>let divList = document.querySelectorAll(&#39;div&#39;);</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>div<span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081022102.png" alt="         伪数组的原型链中并没有数组的原型" loading="lazy"> 伪数组的原型链中并没有数组的原型</p></li><li><p>合并两个数组,得到新数组</p><ul><li>arr.concat(arr2)</li></ul></li><li><p>截取一个数组的一部分</p><ul><li><p>arr.slice(1)//从第二个元素开始</p></li><li><p>arr.slice(0)//全部截取</p><aside> 💡 注意,JS只提供浅拷贝 </aside></li></ul></li></ul><hr><h2 id="删元素" tabindex="-1"><a class="header-anchor" href="#删元素" aria-hidden="true">#</a> 删元素</h2><ul><li><p>delete(不要用)</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>’a’<span class="token punctuation">,</span>’b’<span class="token punctuation">,</span>’c’<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">delete</span> arr<span class="token punctuation">[</span>’<span class="token number">0</span>’<span class="token punctuation">]</span>

arr<span class="token comment">//[empty,’b’,’c’]</span>

神奇<span class="token punctuation">,</span><span class="token function">数组的长度并没有变</span><span class="token punctuation">(</span>稀疏数组<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>改 length(不要用)</p></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//不要随便改length</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081022721.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><ul><li><p>删除头部元素</p><p>arr.shift()</p></li><li><p>删除尾部元素</p><p>arr.pop()</p></li><li><p>删除中间的元素</p><p>arr.splice(index,1)//删除 index 的一个元素</p><p>arr.splice(index,1,’x’)//并在删除位置添加’x’</p><p>arr.splice(index,1,’x’,’y’)//并在删除位置添加’x’,’y’</p></li></ul><hr><h2 id="查看所有元素" tabindex="-1"><a class="header-anchor" href="#查看所有元素" aria-hidden="true">#</a> 查看所有元素</h2><ul><li><p>查看所有属性名</p><ul><li><p>Object.keys(arr)</p></li><li><p>for(let key in arr){</p><p>console.log(<code>\${key}:\${arr[key]}</code>) }</p></li></ul></li><li><p>查看单个属性</p><ul><li><p>查找某个元素是否在数组里</p><p>arr.indexOf(item)//存在返回索引,否则返回-1</p></li><li><p>使用条件查找元素</p><p>arr.find(item ⇒ item % 2 === 0)//找第一个偶数</p></li><li><p>使用条件查找元素的索引</p><p>arr.findIndex(item ⇒ item % 2 === 0)//找第一个偶数的索引</p></li></ul></li></ul><hr><h2 id="增加数组中的元素" tabindex="-1"><a class="header-anchor" href="#增加数组中的元素" aria-hidden="true">#</a> 增加数组中的元素</h2><ul><li><p>在尾部加元素</p><p>arr.push(newItem)//修改 arr,返回新长度</p><p>arr.push(item1,item2)//修改 arr,返回新长度</p></li><li><p>在头部加元素</p><p>arr.unshift(newItem)//修改 arr,返回新长度</p><p>arr.unshift(item1.item2)//修改 arr,返回新长度</p></li><li><p>在中间添加元素</p><p>arr.splice(index,0,’x’)//在 index 处插入’x’</p><p>arr.splice(index,0,’x’,’y’)</p></li></ul><hr><h2 id="修改数组中的元素" tabindex="-1"><a class="header-anchor" href="#修改数组中的元素" aria-hidden="true">#</a> 修改数组中的元素</h2><ul><li>反转顺序 <ul><li>arr.reverse()//修改原数组</li></ul></li><li>自定义顺序 <ul><li>arr.sort((a,b)⇒a-b)</li></ul></li></ul><hr><h2 id="数组变换" tabindex="-1"><a class="header-anchor" href="#数组变换" aria-hidden="true">#</a> 数组变换</h2><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305081022081.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>`,30),t=[l];function p(r,d){return n(),i("div",null,t)}const u=a(s,[["render",p],["__file","JS数组.html.vue"]]);export{u as default};
