import{_ as p,X as i,Y as o,$ as n,a0 as a,a1 as t,Z as e,E as c}from"./framework-b3714b73.js";const l={},u=e(`<h1 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> 动画</h1><h2 id="动画其实是卡了人脑的-bug" tabindex="-1"><a class="header-anchor" href="#动画其实是卡了人脑的-bug" aria-hidden="true">#</a> 动画其实是卡了人脑的 Bug</h2><p>由许多静止画面(帧),以一定速度连续播放时,肉眼因视觉残像产生的错觉.</p><hr><h2 id="为什么需要用-transform-做动画" tabindex="-1"><a class="header-anchor" href="#为什么需要用-transform-做动画" aria-hidden="true">#</a> 为什么需要用 transform 做动画?</h2><p>因为 transform 做动画性能好</p><hr><h2 id="浏览器渲染过程" tabindex="-1"><a class="header-anchor" href="#浏览器渲染过程" aria-hidden="true">#</a> 浏览器渲染过程</h2><ol><li>根据 HTML 构建 HTML 树(DOM)</li><li>根据 CSS 构建 CSS 树(CSSOM)</li><li>将两颗树合并成一颗渲染树(render tree)</li><li>Layout 布局(文档流 盒模型 大小和位置)</li><li>Paint 绘制(边框 文字 阴影画出来)</li><li>Compose 合成(根据层叠关系展现画面)</li></ol><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305080952171.png" alt="                         DOM树" tabindex="0" loading="lazy"><figcaption> DOM树</figcaption></figure><pre><code>                     DOM树
</code></pre><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305080952484.png" alt="                         CSSOM树" tabindex="0" loading="lazy"><figcaption> CSSOM树</figcaption></figure><pre><code>                     CSSOM树
</code></pre><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305080952846.png" alt="                                   渲染树" tabindex="0" loading="lazy"><figcaption> 渲染树</figcaption></figure><pre><code>                               渲染树
</code></pre><h2 id="样式三种更新方式" tabindex="-1"><a class="header-anchor" href="#样式三种更新方式" aria-hidden="true">#</a> 样式三种更新方式</h2><ol><li>Layout ⇒ Paint ⇒ Composite 如:XXX.remove()</li><li>Paint ⇒ Composite 如:改变背景颜色</li><li>Composite 如:改变 transform</li></ol><aside> 💡 这就是为什么transform性能高的原因 </aside><hr><h2 id="css-属性触发流程整理网站" tabindex="-1"><a class="header-anchor" href="#css-属性触发流程整理网站" aria-hidden="true">#</a> CSS 属性触发流程整理网站</h2><p>这个网站归纳了什么属性会触发什么更新方式</p>`,21),r={href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"},d=e('<hr><h2 id="transform-四个常用的功能" tabindex="-1"><a class="header-anchor" href="#transform-四个常用的功能" aria-hidden="true">#</a> transform 四个常用的功能</h2><ul><li>translate 位移</li><li>scale 缩放</li><li>rotate 旋转</li><li>skew 倾斜</li></ul><aside> 💡 一般配合transition过渡使用 inline元素不支持transform(变成block即可) </aside><p>具体使用参看 MDN</p><hr><h2 id="transition-过渡" tabindex="-1"><a class="header-anchor" href="#transition-过渡" aria-hidden="true">#</a> transition 过渡</h2><p>作用:补充中间帧</p><p>语法:</p><ul><li>transition: 属性名 时长 过渡方式 延迟 (如: transition: left 200ms linear)</li><li>可以用逗号分隔两个不同属性(如:transition:left 200ms,top 400ms)</li><li>可以用 all 代表所有属性(如:transition:all 200ms)</li><li>过渡方式:</li></ul>',10),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition-timing-function",target:"_blank",rel:"noopener noreferrer"},v=n("hr",null,null,-1),m=n("h2",{id:"使用-transform-制作-跳动的心",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用-transform-制作-跳动的心","aria-hidden":"true"},"#"),a(" 使用 transform 制作”跳动的心”")],-1),g=n("p",null,"下面为 codepen 链接,可能会被墙",-1),h={href:"https://codepen.io/dashingli/pen/KKeLgqW",target:"_blank",rel:"noopener noreferrer"},b=e(`<p>效果</p><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305080953575.gif" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><hr><h2 id="使用-animation-制作-跳动的心" tabindex="-1"><a class="header-anchor" href="#使用-animation-制作-跳动的心" aria-hidden="true">#</a> 使用 animation 制作”跳动的心”</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>circle-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>circle-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>square<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">animation</span><span class="token punctuation">:</span> identifier 0.5s ease infinite alternate<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token atrule"><span class="token rule">@keyframes</span> identifier</span> <span class="token punctuation">{</span>
  <span class="token selector">0%</span> <span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">100%</span> <span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token selector">.circle-1,
.circle-2,
.square</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.circle-1</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>15px<span class="token punctuation">,</span> 70px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.circle-2</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-20px<span class="token punctuation">,</span> 70px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.square</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/dashingli/imageSave@main/img/202305080953943.gif" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>`,7);function f(x,_){const s=c("ExternalLinkIcon");return i(),o("div",null,[u,n("p",null,[n("a",r,[a("CSS Triggers List - What Kind of Changes You Can Make"),t(s)])]),d,n("p",null,[n("a",k,[a("transition-timing-function - CSS（层叠样式表） | MDN"),t(s)])]),v,m,g,n("p",null,[n("a",h,[a("https://codepen.io/dashingli/pen/KKeLgqW"),t(s)])]),b])}const S=p(l,[["render",f],["__file","动画.html.vue"]]);export{S as default};
