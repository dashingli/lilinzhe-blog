import{_ as e,X as o,Y as c,$ as s,a0 as n,a1 as t,Z as p,E as i}from"./framework-b3714b73.js";const u={},l=p(`<h1 id="jquery-设计思想" tabindex="-1"><a class="header-anchor" href="#jquery-设计思想" aria-hidden="true">#</a> jQuery 设计思想</h1><p>本文摘录整理自阮一峰的&quot;jQuery 设计思想&quot;</p><p>jQuery 的基本设计思想和主要用法，就是**&quot;选择某个网页元素，然后对其进行某种操作&quot;.**</p><p>因为此技术目前不怎么使用了,快速过一遍.</p><h2 id="选择网页元素" tabindex="-1"><a class="header-anchor" href="#选择网页元素" aria-hidden="true">#</a> 选择网页元素</h2><p>使用 jQuery 的第一步，往往就是将一个选择表达式，放进构造函数 jQuery()（简写为**$**），然后得到被选中的元素。</p><p>选择表达式可以是</p><ol><li>CSS 选择器</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择整个文档对象</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#myId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择ID为myId的网页元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div.myClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选择class为myClass的div元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=first]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选择name属性等于first的input元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>jQuery 特有表达式</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a:first&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择网页中第一个a元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;tr:odd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择表格的奇数行</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#myForm :input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选择表单中的input元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:visible&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择可见的div元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:gt(2)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选择所有的div元素，除了前三个</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:animated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选择当前处于动画状态的div元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="改变结果集" tabindex="-1"><a class="header-anchor" href="#改变结果集" aria-hidden="true">#</a> 改变结果集</h2>`,13),r={href:"https://api.jquery.com/category/traversing/filtering/",target:"_blank",rel:"noopener noreferrer"},d=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选择包含p元素的div元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;.myClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择class不等于myClass的div元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;.myClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择class等于myClass的div元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择第1个div元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择第6个div元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),k={href:"https://api.jquery.com/category/traversing/tree-traversal/",target:"_blank",rel:"noopener noreferrer"},v=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择div元素后面的第一个p元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择div元素的父元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">closest</span><span class="token punctuation">(</span><span class="token string">&quot;form&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择离div最近的那个form父元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择div的所有子元素</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//选择div的同级元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="链式操作" tabindex="-1"><a class="header-anchor" href="#链式操作" aria-hidden="true">#</a> 链式操作</h2><p>jQuery 设计思想之三，就是最终选中网页元素以后，可以对它进行一系列操作，并且所有操作可以连接在一起，以链条的形式写出来</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;h3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>分解开来，就是下面这样</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span> <span class="token comment">//找到div元素</span>
  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;h3&quot;</span><span class="token punctuation">)</span> <span class="token comment">//选择其中的h3元素</span>
  <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//选择第3个h3元素</span>
  <span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将它的内容改为Hello</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是 jQuery 最令人称道、最方便的特点。它的原理在于每一步的 jQuery 操作，返回的都是一个 jQuery 对象，所以不同操作可以连在一起。</p>`,8),m={href:"https://api.jquery.com/end/",target:"_blank",rel:"noopener noreferrer"},b=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;h3&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//退回到选中所有的h3元素的那一步</span>
  <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">//选中第一个h3元素</span>
  <span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将它的内容改为World</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="元素的操作-取值和赋值" tabindex="-1"><a class="header-anchor" href="#元素的操作-取值和赋值" aria-hidden="true">#</a> 元素的操作：取值和赋值</h2><p>操作网页元素，最常见的需求是取得它们的值，或者对它们进行赋值。</p><p>jQuery 设计思想之四，就是使用同一个函数，来完成取值（getter）和赋值（setter），即&quot;取值器&quot;与&quot;赋值器&quot;合一。到底是取值还是赋值，由函数的参数决定。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//html()没有参数，表示取出h1的值</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//html()有参数Hello，表示对h1进行赋值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>常见的取值和赋值函数如下：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 取出或设置html内容
<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 取出或设置text内容
<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 取出或设置某个属性的值
<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 取出或设置某个元素的宽度
<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 取出或设置某个元素的高度
<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 取出某个表单元素的值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),f={href:"https://api.jquery.com/text/",target:"_blank",rel:"noopener noreferrer"},g=s("hr",null,null,-1),h=s("h2",{id:"元素的操作-移动",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#元素的操作-移动","aria-hidden":"true"},"#"),n(" 元素的操作:移动")],-1),q=s("p",null,"jQuery 设计思想之五，就是提供两组方法，来操作元素在网页中的位置移动。一组方法是直接移动该元素，另一组方法是移动其他元素，使得目标元素达到我们想要的位置。",-1),_=s("p",null,"假定我们选中了一个 div 元素，需要把它移动到 p 元素后面。",-1),j={href:"https://api.jquery.com/insertAfter/",target:"_blank",rel:"noopener noreferrer"},x=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),y={href:"https://api.jquery.com/after/",target:"_blank",rel:"noopener noreferrer"},$=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>表面上看，这两种方法的效果是一样的，唯一的不同似乎只是操作视角的不同。但是实际上，它们有一个重大差别，那就是返回的元素不一样。第一种方法返回 div 元素，第二种方法返回 p 元素。你可以根据需要，选择到底使用哪一种方法。</p><p>使用这种模式的操作方法，一共有四对：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>和<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：在现存元素的外部，从后面插入元素
<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>和<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：在现存元素的外部，从前面插入元素
<span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>和<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：在现存元素的内部，从后面插入元素
<span class="token punctuation">.</span><span class="token function">prependTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>和<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>：在现存元素的内部，从前面插入元素
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="元素的操作-复制-删除和创建" tabindex="-1"><a class="header-anchor" href="#元素的操作-复制-删除和创建" aria-hidden="true">#</a> 元素的操作:复制 删除和创建</h2><p>除了元素的位置移动之外，jQuery 还提供其他几种操作元素的重要方法。</p>`,7),Q={href:"https://api.jquery.com/clone/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://api.jquery.com/remove/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://api.jquery.com/detach/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://api.jquery.com/empty/",target:"_blank",rel:"noopener noreferrer"},O=p(`<p>创建新元素的方法非常简单，只要把新元素直接传入 jQuery 的构造函数就行了：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;p&gt;Hello&lt;/p&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;li class=&quot;new&quot;&gt;new list item&lt;/li&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;list item&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="工具方法" tabindex="-1"><a class="header-anchor" href="#工具方法" aria-hidden="true">#</a> 工具方法</h2>`,4),A={href:"https://api.jquery.com/category/utilities/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.ruanyifeng.com/blog/2011/06/designing_ideas_of_inheritance_mechanism_in_javascript.html",target:"_blank",rel:"noopener noreferrer"},I=s("strong",null,"即 jQuery.method()",-1),E=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>   $<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 去除字符串两端的空格。

　　$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 遍历一个数组或对象。

　　$<span class="token punctuation">.</span><span class="token function">inArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 返回一个值在数组中的索引位置。如果该值不在数组中，则返回<span class="token operator">-</span><span class="token number">1</span>。

　　$<span class="token punctuation">.</span><span class="token function">grep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 返回数组中符合某种标准的元素。

　　$<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 将多个对象，合并到第一个对象。

　　$<span class="token punctuation">.</span><span class="token function">makeArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 将对象转化为数组。

　　$<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断对象的类别（函数对象、日期对象、数组对象、正则对象等等）。

　　$<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断某个参数是否为数组。

　　$<span class="token punctuation">.</span><span class="token function">isEmptyObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断某个对象是否为空（不含有任何属性）。

　　$<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断某个参数是否为函数。

　　$<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断某个参数是否为用<span class="token string">&quot;{}&quot;</span>或<span class="token string">&quot;new Object&quot;</span>建立的对象。

　　$<span class="token punctuation">.</span><span class="token function">support</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断浏览器是否支持某个特性。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="事件操作" tabindex="-1"><a class="header-anchor" href="#事件操作" aria-hidden="true">#</a> 事件操作</h2>`,3),T={href:"https://api.jquery.com/category/events/",target:"_blank",rel:"noopener noreferrer"},B=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前，jQuery 主要支持以下事件：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>   <span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 表单元素失去焦点。

　　<span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 表单元素的值发生变化

　　<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 鼠标单击

　　<span class="token punctuation">.</span><span class="token function">dblclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 鼠标双击

　　<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 表单元素获得焦点

　　<span class="token punctuation">.</span><span class="token function">focusin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 子元素获得焦点

　　<span class="token punctuation">.</span><span class="token function">focusout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 子元素失去焦点

　　<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 同时为mouseenter和mouseleave事件指定处理函数

　　<span class="token punctuation">.</span><span class="token function">keydown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 按下键盘（长时间按键，只返回一个事件）

　　<span class="token punctuation">.</span><span class="token function">keypress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 按下键盘（长时间按键，将返回多个事件）

　　<span class="token punctuation">.</span><span class="token function">keyup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 松开键盘

　　<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 元素加载完毕

　　<span class="token punctuation">.</span><span class="token function">mousedown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 按下鼠标

　　<span class="token punctuation">.</span><span class="token function">mouseenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 鼠标进入（进入子元素不触发）

　　<span class="token punctuation">.</span><span class="token function">mouseleave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 鼠标离开（离开子元素不触发）

　　<span class="token punctuation">.</span><span class="token function">mousemove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 鼠标在元素内部移动

　　<span class="token punctuation">.</span><span class="token function">mouseout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 鼠标离开（离开子元素也触发）

　　<span class="token punctuation">.</span><span class="token function">mouseover</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 鼠标进入（进入子元素也触发）

　　<span class="token punctuation">.</span><span class="token function">mouseup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 松开鼠标

　　<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token constant">DOM</span>加载完成

　　<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 浏览器窗口的大小发生改变

　　<span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 滚动条的位置发生变化

　　<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 用户选中文本框中的内容

　　<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 用户递交表单

　　<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 根据鼠标点击的次数，依次运行多个函数

　　<span class="token punctuation">.</span><span class="token function">unload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 用户离开页面
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),N={href:"https://api.jquery.com/bind/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://api.jquery.com/bind/",target:"_blank",rel:"noopener noreferrer"},M=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>
  <span class="token string">&quot;click change&quot;</span><span class="token punctuation">,</span> <span class="token comment">//同时绑定click和change事件</span>

  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),S={href:"https://api.jquery.com/one/",target:"_blank",rel:"noopener noreferrer"},F=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//只运行一次，以后的点击不会运行</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),L={href:"https://api.jquery.com/unbind/",target:"_blank",rel:"noopener noreferrer"},P=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),W={href:"https://api.jquery.com/category/events/event-object/",target:"_blank",rel:"noopener noreferrer"},X=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;click&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个事件对象有一些很有用的属性和方法：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>   event<span class="token punctuation">.</span>pageX 事件发生时，鼠标距离网页左上角的水平距离

　　event<span class="token punctuation">.</span>pageY 事件发生时，鼠标距离网页左上角的垂直距离

　　event<span class="token punctuation">.</span>type 事件的类型（比如click）

　　event<span class="token punctuation">.</span>which 按下了哪一个键

　　event<span class="token punctuation">.</span>data 在事件对象上绑定数据，然后传入事件处理函数

　　event<span class="token punctuation">.</span>target 事件针对的网页元素

　　event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 阻止事件的默认行为（比如点击链接，会自动打开新页面）

　　event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 停止事件向上层元素冒泡
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在事件处理函数中，可以用 this 关键字，返回事件针对的 DOM 元素：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">&quot;evil&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//如果确认为有害链接</span>

    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//阻止打开</span>

    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;evil&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//加上表示有害的class</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Y={href:"https://api.jquery.com/trigger/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://api.jquery.com/triggerHandler/",target:"_blank",rel:"noopener noreferrer"},J=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特殊效果" tabindex="-1"><a class="header-anchor" href="#特殊效果" aria-hidden="true">#</a> 特殊效果</h2>`,2),U={href:"https://api.jquery.com/category/effects/",target:"_blank",rel:"noopener noreferrer"},Z=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//展现一个h1标题</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用的特殊效果如下：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>   <span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 淡入

　　<span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 淡出

　　<span class="token punctuation">.</span><span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 调整透明度

　　<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 隐藏元素

　　<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 显示元素

　　<span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 向下展开

　　<span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 向上卷起

　　<span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 依次展开或卷起某个元素

　　<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 依次展示或隐藏某个元素
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),G={href:"https://api.jquery.com/show/",target:"_blank",rel:"noopener noreferrer"},K={href:"https://api.jquery.com/hide/",target:"_blank",rel:"noopener noreferrer"},R=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 300毫秒内淡入</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token string">&quot;slow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 缓慢地淡出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在特效结束后，可以指定执行某个函数。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),nn={href:"https://api.jquery.com/animate/",target:"_blank",rel:"noopener noreferrer"},sn=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&quot;+=50&quot;</span><span class="token punctuation">,</span> <span class="token comment">//不断右移</span>

    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token comment">//指定透明度</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token number">300</span><span class="token punctuation">,</span> <span class="token comment">// 持续时间</span>

  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;done!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token comment">//回调函数</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),an={href:"https://api.jquery.com/stop/",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://api.jquery.com/delay/",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://api.jquery.com/jQuery.fx.off/",target:"_blank",rel:"noopener noreferrer"};function en(on,cn){const a=i("ExternalLinkIcon");return o(),c("div",null,[l,s("p",null,[n("jQuery 设计思想之二，就是提供各种强大的"),s("a",r,[n("过滤器"),t(a)]),n("，对结果集进行筛选，缩小选择结果。")]),d,s("p",null,[n("有时候，我们需要从结果集出发，移动到附近的相关元素，jQuery 也提供了在 DOM 树上的"),s("a",k,[n("移动方法"),t(a)]),n(".")]),v,s("p",null,[n("jQuery 还提供了"),s("a",m,[n(".end()"),t(a)]),n("方法，使得结果集可以后退一步：")]),b,s("p",null,[n("需要注意的是，如果结果集包含多个元素，那么赋值的时候，将对其中所有的元素赋值；取值的时候，则是只取出第一个元素的值（"),s("a",f,[n(".text()"),t(a)]),n("例外，它取出所有元素的 text 内容）。")]),g,h,q,_,s("p",null,[n("第一种方法是使用"),s("a",j,[n(".insertAfter()"),t(a)]),n("，把 div 元素移动 p 元素后面：")]),x,s("p",null,[n("第二种方法是使用"),s("a",y,[n(".after()"),t(a)]),n("，把 p 元素加到 div 元素前面：")]),$,s("p",null,[n("复制元素使用"),s("a",Q,[n(".clone()"),t(a)]),n("。")]),s("p",null,[n("删除元素使用"),s("a",w,[n(".remove()"),t(a)]),n("和"),s("a",H,[n(".detach()"),t(a)]),n("。两者的区别在于，前者不保留被删除元素的事件，后者保留，有利于重新插入文档时使用。")]),s("p",null,[n("清空元素内容（但是不删除该元素）使用"),s("a",C,[n(".empty()"),t(a)]),n("。")]),O,s("p",null,[n("jQuery 设计思想之六：除了对选中的元素进行操作以外，还提供一些与元素无关的"),s("a",A,[n("工具方法"),t(a)]),n("（utility）。不必选中元素，就可以直接使用这些方法。")]),s("p",null,[n("如果你懂得 Javascript 语言的"),s("a",D,[n("继承原理"),t(a)]),n("，那么就能理解工具方法的实质。它是定义在 jQuery 构造函数上的方法，"),I,n("，所以可以直接使用。而那些操作元素的方法，是定义在构造函数的 prototype 对象上的方法，即 jQuery.prototype.method()，所以必须生成实例（即选中元素）后使用。如果不理解这种区别，问题也不大，只要把工具方法理解成，是像 javascript 原生函数那样，可以直接使用的方法就行了。")]),E,s("p",null,[n("jQuery 设计思想之七，就是把"),s("a",T,[n("事件"),t(a)]),n("直接绑定在网页元素之上。")]),B,s("p",null,[n("以上这些事件在 jQuery 内部，都是"),s("a",N,[n(".bind()"),t(a)]),n("的便捷方式。使用"),s("a",V,[n(".bind()"),t(a)]),n(" 可以更灵活地控制事件，比如为多个事件绑定同一个函数：")]),M,s("p",null,[n("有时，你只想让事件运行一次，这时可以使用"),s("a",S,[n(".one()"),t(a)]),n("方法。")]),F,s("p",null,[s("a",L,[n(".unbind()"),t(a)]),n("用来解除事件绑定。")]),P,s("p",null,[n("所有的事件处理函数，都可以接受一个"),s("a",W,[n("事件对象"),t(a)]),n("（event object）作为参数，比如下面例子中的 e：")]),X,s("p",null,[n("有两种方法，可以自动触发一个事件。一种是直接使用事件函数，另一种是使用"),s("a",Y,[n(".trigger()"),t(a)]),n("或"),s("a",z,[n(".triggerHandler()"),t(a)])]),J,s("p",null,[n("最后，jQuery 允许对象呈现某些"),s("a",U,[n("特殊效果"),t(a)]),n("。")]),Z,s("p",null,[n("除了"),s("a",G,[n(".show()"),t(a)]),n("和"),s("a",K,[n(".hide()"),t(a)]),n("，所有其他特效的默认执行时间都是 400ms（毫秒），但是你可以改变这个设置。")]),R,s("p",null,[n("更复杂的特效，可以用"),s("a",nn,[n(".animate()"),t(a)]),n("自定义。")]),sn,s("p",null,[s("a",an,[n(".stop()"),t(a)]),n("和"),s("a",tn,[n(".delay()"),t(a)]),n("用来停止或延缓特效的执行。")]),s("p",null,[s("a",pn,[n("$.fx.off"),t(a)]),n("如果设置为 true，则关闭所有网页特效。")])])}const ln=e(u,[["render",en],["__file","jQuery设计思想.html.vue"]]);export{ln as default};
